{
	"info": {
		"_postman_id": "2adff0fd-306c-418f-8367-fc29872d5018",
		"name": "API Tests",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "48039336",
		"_collection_link": "https://www.postman.com/badnation-137-2984702/workspace/intelligent-qa-pipeline/collection/48039336-2adff0fd-306c-418f-8367-fc29872d5018?action=share&source=collection_link&creator=48039336"
	},
	"item": [
		{
			"name": "Get All Users",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"info\": {\r\n    \"_postman_id\": \"a1b2c3d4-e5f6-7890-g1h2-i3j4k5l6m7n8\",\r\n    \"name\": \"API Tests\",\r\n    \"schema\": \"https://schema.getpostman.com/json/collection/v2.1.0/collection.json\"\r\n  },\r\n  \"item\": [\r\n    {\r\n      \"name\": \"Get All Users\",\r\n      \"request\": {\r\n        \"method\": \"GET\",\r\n        \"header\": [],\r\n        \"url\": {\r\n          \"raw\": \"{{base_url}}/users\",\r\n          \"variable\": [\r\n            {\r\n              \"key\": \"base_url\",\r\n              \"value\": \"https://jsonplaceholder.typicode.com\"\r\n            }\r\n          ],\r\n          \"host\": [\"{{base_url}}\"],\r\n          \"path\": [\"users\"]\r\n        }\r\n      },\r\n      \"response\": []\r\n    },\r\n    {\r\n      \"name\": \"Get User by ID\",\r\n      \"request\": {\r\n        \"method\": \"GET\",\r\n        \"header\": [],\r\n        \"url\": {\r\n          \"raw\": \"{{base_url}}/users/1\",\r\n          \"variable\": [\r\n            {\r\n              \"key\": \"base_url\",\r\n              \"value\": \"https://jsonplaceholder.typicode.com\"\r\n            }\r\n          ],\r\n          \"host\": [\"{{base_url}}\"],\r\n          \"path\": [\"users\", \"1\"]\r\n        }\r\n      },\r\n      \"response\": []\r\n    }\r\n  ],\r\n  \"event\": [\r\n    {\r\n      \"listen\": \"prerequest\",\r\n      \"script\": {\r\n        \"type\": \"text/javascript\",\r\n        \"exec\": [\r\n          \"\"\r\n        ]\r\n      }\r\n    },\r\n    {\r\n      \"listen\": \"test\",\r\n      \"script\": {\r\n        \"type\": \"text/javascript\",\r\n        \"exec\": [\r\n          \"pm.test(\\\"Status code is 200\\\", function () {\",\r\n          \"    pm.response.to.have.status(200);\",\r\n          \"});\",\r\n          \"\",\r\n          \"pm.test(\\\"Response has users\\\", function () {\",\r\n          \"    const response = pm.response.json();\",\r\n          \"    pm.expect(response).to.be.an(\\\"array\\\");\",\r\n          \"    pm.expect(response.length).to.be.at.least(1);\",\r\n          \"});\"\r\n        ]\r\n      }\r\n    }\r\n  ],\r\n  \"variable\": [\r\n    {\r\n      \"key\": \"base_url\",\r\n      \"value\": \"https://jsonplaceholder.typicode.com\"\r\n    }\r\n  ]\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/users",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"users"
					]
				}
			},
			"response": []
		}
	]
}